import Foundation

struct CommonInfo : Decodable {
    var status : String?
    var totalResults : Int?
    var articles : [Articles]?
}

struct Articles : Decodable {
    var source : Source?
    var author : String?
    var title : String?
    var description : String?
    var url : String?
    var urlToImage : String?
    var publishedAt : String?
    var content : String?
}

struct Source : Decodable {
    var id : String?
    var name : String?
}

enum URLs: String {
    case topHeadLinesTechnology = "https://newsapi.org/v2/top-headlines?country=ru&category=technology&pageSize=100&apiKey=8f825354e7354c71829cfb4cb15c4893"
    case everythingQWithParameters = "https://newsapi.org/v2/everything?q=apple&pageSize=100&language=ru&apiKey=8f825354e7354c71829cfb4cb15c4893"
}

enum ProductKeys: String {
    // MARK: This key is already used in appStore, please, generate new one to avoid errors for my app users, it's free. Because max. number of requests for one product key ( connected to your mail ) is 100 for all users. When this number is reached, we need to wait for the next day and not demo key price is about 50 000 $, which i don't have yet. Thanks.
    case forTestFirst = "8f825354e7354c71829cfb4cb15c4893"
    case forTestSecond = ""
    case currentStatus = "currentStatus"
    case currentStatus_1_3 = "currentStatus_1_3"
}

enum Errors: String {
    case topicLabelNoInfo = "–¢—É—Ç –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ, –Ω–æ –µ–≥–æ –Ω–µ—Ç - —ç—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ."
    case badRequest = "Error 400 - –ß—ë—Ç–æ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ"
    case unauthorized = "Error 401 - –ß—ë—Ç–æ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –∑–∞–ø—Ä–æ—Å–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ"
    case tooManyRequests = "Error 429 - –ü—Ä–µ–≤—ã—à–µ–Ω–æ –∫–æ–ª-–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å—É—Ç–∫–∏ (100), –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞, 50–∫ $ —Å—Ç–æ–∏—Ç –±–µ–∑–ª–∏–º–∏—Ç, —É–≤—ã"
    case serverError = "Error 500 - –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞, –ø–æ–π–¥—É –ø–æ—Å–ø–ª—é —Ç–æ–≥–¥–∞, –º–± –ø–æ–∑–∂–µ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç"
    case error = "–ö–∞–∫–∞—è —Ç–æ –æ—à–∏–±–∫–∞ –≥–æ—Å–ø–æ–¥–∞ –∏ –¥–∞–º—ã. –ò–Ω–µ—Ç –≤–∏–¥–∏–º–æ –ø–æ–∫–∞ –Ω–µ –ø–æ—è–≤–∏–ª—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
}

enum DeveloperInfo: String {
    case title = "–ò–Ω—Ñ–æ –æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞"
    case message = "–î—Ä—É–∑—å—è, —ç—Ç–æ –º–æ–µ –ø–µ—Ä–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Å—Ç–æ—Ä–µ, –∫–æ—Ç–æ—Ä–æ–µ —è –≤—ã–ª–æ–∂–∏–ª –¥–ª—è –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –∏ –æ–ø—ã—Ç–∞. –õ–∏—Ü–µ–Ω–∑–∏—è –Ω–∞ 8–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É —Å—Ç–æ–∏—Ç 50–∫ $ –≤ –º–µ—Å—è—Ü - —Ç–∞–∫–∏—Ö —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–∫–∞ –Ω–µ—Ç, –ø–æ—ç—Ç–æ–º—É –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ (–±–æ–ª–µ–µ 100 –≤ —Å—É—Ç–∫–∏ –Ω–∞ –≤—Å–µ—Ö, –∫—Ç–æ —Å–∫–∞—á–∞–ª) –í—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –æ—à–∏–±–∫—É. –ö–æ–ª - –≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ–±–Ω—É–ª—è–µ—Ç—Å—è —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏. –ü–æ—ç—Ç–æ–º—É –ø—Ä–æ—à—É –Ω–µ —Å—É–¥–∏—Ç–µ —Å—Ç—Ä–æ–≥–æ –∏ –Ω–µ —Å—Ç–∞–≤—å—Ç–µ –Ω–∏–∑–∫–∏–µ –æ—Ü–µ–Ω–∫–∏ –∑–∞ —ç—Ç–æ." 
    case appTitle = "–¢–µ—Ö–Ω–æ–ù–æ–≤–æ—Å—Ç–∏ ‡≤†_‡≤†"
    case shareInfo = "–ö–∞—á–∞–π –¢–µ—Ö–Ω–æ–ù–æ–≤–æ—Å—Ç–∏, –±—É–¥—å –≤ —Ç–µ–º–µ ü§ôüèΩ ‚û°Ô∏è https://apps.apple.com/ru/app/—Ç–µ—Ö–Ω–æ–Ω–æ–≤–æ—Å—Ç–∏/id1619690998"
}

enum Updates: String {
    case title = "–ß—Ç–æ –Ω–æ–≤–æ–≥–æ:"
    case whatsNew = "- –ü–æ—è–≤–∏–ª–∞—Å—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö, —Ç–∞–∫ –≤–µ—Å–µ–ª–µ–µ \n- –£–ª—É—á—à–µ–Ω—ã –∫–∞—Ä—Ç–∏–Ω–∫–∏, –∞–Ω–∏–º–∞—Ü–∏–∏, —Ç–µ–ø–µ—Ä—å –µ—â–µ –±–æ–ª—å—à–µ –≤–∏–±—Ä–æ–æ—Ç–∫–ª–∏–∫–æ–≤ \n- –î–∞—Ç–∞ —Ç–æ–ø–∏–∫–∞ –Ω–∞–∫–æ–Ω–µ—Ü —Å—Ç–∞–ª–∞ —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–π \n- –ú—É—Å–æ—Ä –≤—ã–Ω–µ—Å–µ–Ω, –ø–æ—Ä—è–¥–æ–∫ –Ω–∞–≤–µ–¥–µ–Ω \n- –ï—Å—Ç—å –∏–¥–µ–∏? üì¨ upakkomi@gmail.com"
    case ok = "OK"
}

enum SoundName: String {
    case loaded
    case error
    case jedy1
    case jedy2
}

enum SettingsKeys: String {
    case soundSettings
    case soundWord = "–ó–≤—É–∫–∏"
    case info = "–ò–Ω—Ñ–æ"
}
